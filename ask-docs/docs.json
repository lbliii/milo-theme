[
  {
    "id": "7aff348b73b143966424bb5972798ac4",
    "title": "Get Started",
    "description": "How to get started with the theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "get-started",
    "parent": "Milo Theme Docs",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/get-started/",
    "relURI": "/get-started/",
    "body": " Before You Start # This section assumes that you have experience with terminals, CLIs, and IDEs (e.g., VS Code) You should ideally have a git tool (e.g., GitHub) to store and manage your site repo Why use Hugo? # Affordable: Technical Writers usually have a razor-thin budget; you can deploy docs with Hugo + Netlify (or Render, Vercel) for free in most cases (Startup, Open Source) Scalable: Hugo is the fastest SSG, supports localization, is un-opinionated in terms of style, and is easy to evolve alongside your product Ergonomic: The drafting UX is markdown focused with near-instant local previews; for non-tehchnical contributors, you can plug into CMS interfaces (e.g., Frontmatter) Agnostic: You\u0026rsquo;ll always own your docs, and transforming content into JSON or XML is as easy as defining an output template (great for search tools like Algolia!) Why use This Theme? # No Manual Menus: All sections are auto-sorted based on either a weight value or a-z title order Deep Section Nesting: Tech docs tend to need sub-sub-sub sections, y\u0026rsquo;know? Discovery UX Components: Algolia Search \u0026amp; ChatGPT UIs are OOTB for easy hookup Battle Tested Shortcodes: I\u0026rsquo;ve been deploying Hugo for tech docs for 5+ years; this is my personal collection of need-to-haves, made as agnostically as possible TailwindCSS + VanillaJS: You\u0026rsquo;ll be able to modify this theme to your liking using the basics with minimal dependencies Brandable: Colors and fonts have their own CSS files; the TailwindCSS extensions mapped to these styles use generic names like brand-bold, brand-semibold, and brand-color-1. ",
    "tags": []
  },
  {
    "id": "bc416edc6fcbea912aee77da48a994cd",
    "title": "install",
    "description": "Learn how to install Hugo and the theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "get-started",
    "parent": "Get Started",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/get-started/install/",
    "relURI": "/get-started/install/",
    "body": "Getting from 0 to 1 takes ~5 minutes.\n1. Install Hugo # brew install hugo Copy See Hugo Docs for more options:\nMacOS Linux Windows 2. Create a New Site # hugo new site \u0026lt;siteName\u0026gt; Copy 3. Install This Project # Open your \u0026lt;siteName\u0026gt; project directory.\nNavigate to the themes/ directory.\nRun the following command:\ngh repo clone lbliii/milo-theme Copy 4. Init Repo # Time to start saving your progress!\nRun the following: git init Copy Add a comment. Push your new site and theme to your remote git repo. 5. Deploy locally # Navigate into the siteName repo. Run the following: hugo server Copy Open localhost (typically localhost:1313). yay! you did it!You\u0026rsquo;ve done the hardest part: installing and deploying Hugo with a theme. See the next page to learn how to clear out my default content and start drafting. ",
    "tags": []
  },
  {
    "id": "d5a13568ebf344cd3bb897042d6cba9b",
    "title": "clear content",
    "description": "Learn how to clear out the default content and start fresh.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "get-started",
    "parent": "Get Started",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/get-started/clear/",
    "relURI": "/get-started/clear/",
    "body": "By default, content stored in the theme\u0026rsquo;s content directory (themes/milo/content/) is served alongside content stored in the site\u0026rsquo;s content directory (content/). You\u0026rsquo;re going to want to clear that out once you\u0026rsquo;re ready to write your own docs.\nTest Feature ConfigThe default documentation is great for testing out different feature configs, such as:\ndisabling next/prev changing truncation values updating the number of child articles to displayed in a tile. Before You Start # You should have completed the install steps. How to Clear out Default content # Open your siteName repo. Navigate to themes/milo. Delete the content/ directory. That\u0026rsquo;s it! Now start drafting in your top-level content/ directory.\n",
    "tags": []
  },
  {
    "id": "703d1a12cf0d6694b1bc6f84bd87319e",
    "title": "configure",
    "description": "Learn how to configure the basics (site URL and metadata).",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "get-started",
    "parent": "Get Started",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/get-started/configure/",
    "relURI": "/get-started/configure/",
    "body": "",
    "tags": []
  },
  {
    "id": "93f46d64350f434384f293fbe9a95ea0",
    "title": "Features",
    "description": "Learn how to use the features of the theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "features",
    "parent": "Milo Theme Docs",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/features/",
    "relURI": "/features/",
    "body": "",
    "tags": []
  },
  {
    "id": "acd39d1787e18fae8c246aa195338a42",
    "title": "Reference",
    "description": "Reference theme logic for advanced config or development.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Milo Theme Docs",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/",
    "relURI": "/reference/",
    "body": "",
    "tags": []
  },
  {
    "id": "378ac2c71d0765c2f7312aef6036b5ba",
    "title": "Assets",
    "description": "Learn about the assets used in the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Reference",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/assets/",
    "relURI": "/reference/assets/",
    "body": "",
    "tags": []
  },
  {
    "id": "73c702e778fdf2c3d154caf1a7538b5a",
    "title": "CSS",
    "description": "Learn about the CSS  used in the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Assets",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/assets/css/",
    "relURI": "/reference/assets/css/",
    "body": "The CSS used in the MiloDocs theme is powered by TailwindCSS.\nBefore You Start # Before making any changes, let\u0026rsquo;s deploy locally and activate style monitoring.\nRun pnpm start to deploy locally. Navigate into /themes/milo. Run pnpm watch-tw. This enables monitoring for CSS changes. Modify Templates # You can change the TailwindCSS classes assigned within the Hugo templates by doing the following:\nNavigate into /themes/milo/layouts. Choose which kind of template you wish to update. _default: high-level content type templates (baseof, home, list, section, single, glossary, tutorial) partials: flexible components used in any default template (tiles, next/prev, etc) shortcodes: markdown-file compatible components used inline with your documentation copy Make changes. Verify changes were successful. Save. Modify Global Theme Extensions # You can modify the default extensions the Milo Docs theme has set for TailwindCSS. This is useful when you\u0026rsquo;d like to change the branded fonts or change Tailwind\u0026rsquo;s default font sizes.\nUpdating Fonts?If you are updating the fonts, make sure that you:\nInstall your font files at /static/fonts. Add them to your CSS at /themes/milo/assets/css/src/input.css. Navigate into /themes/milo/. Open the tailwind.config.js file. Update the theme.extends entries. Modify Stylesheets # Hugo can reference CSS from multiple locations (e.g., static and assets). The MiloDocs theme keeps all CSS in the assets folder since we want to process the files in a variety of ways \u0026mdash; such as concatenating many modular CSS files together into a bundled output that we can minify for production deployments.\nfonts.css # The fonts.css file is where you can add/replace the font references to adhere to your brand aesthetic.\n/* Rubik Black Italic */ @font-face { font-family: \u0026#39;RubikBlackItalic\u0026#39;; font-style: italic; font-weight: 900; src: url(\u0026#39;/fonts/Rubik-BlackItalic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Extra Bold Italic */ @font-face { font-family: \u0026#39;RubikExtraBoldItalic\u0026#39;; font-style: italic; font-weight: 800; src: url(\u0026#39;/fonts/Rubik-ExtraBoldItalic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Bold Italic */ @font-face { font-family: \u0026#39;RubikBoldItalic\u0026#39;; font-style: italic; font-weight: 700; src: url(\u0026#39;/fonts/Rubik-BoldItalic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Semi-Bold Italic */ @font-face { font-family: \u0026#39;RubikSemiBoldItalic\u0026#39;; font-style: italic; font-weight: 600; src: url(\u0026#39;/fonts/Rubik-SemiBoldItalic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Medium Italic */ @font-face { font-family: \u0026#39;RubikMediumItalic\u0026#39;; font-style: italic; font-weight: 500; src: url(\u0026#39;/fonts/Rubik-MediumItalic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Italic */ @font-face { font-family: \u0026#39;RubikItalic\u0026#39;; font-style: italic; font-weight: normal; src: url(\u0026#39;/fonts/Rubik-Italic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Light Italic */ @font-face { font-family: \u0026#39;RubikLightItalic\u0026#39;; font-style: italic; font-weight: 300; src: url(\u0026#39;/fonts/Rubik-LightItalic.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Black */ @font-face { font-family: \u0026#39;RubikBlack\u0026#39;; font-weight: 900; src: url(\u0026#39;/fonts/Rubik-Black.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Extra Bold */ @font-face { font-family: \u0026#39;RubikExtraBold\u0026#39;; font-weight: 800; src: url(\u0026#39;/fonts/Rubik-ExtraBold.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Bold */ @font-face { font-family: \u0026#39;RubikBold\u0026#39;; font-weight: 700; src: url(\u0026#39;/fonts/Rubik-Bold.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Semi-Bold */ @font-face { font-family: \u0026#39;RubikSemiBold\u0026#39;; font-weight: 600; src: url(\u0026#39;/fonts/Rubik-SemiBold.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Medium */ @font-face { font-family: \u0026#39;RubikMedium\u0026#39;; font-weight: 500; src: url(\u0026#39;/fonts/Rubik-Medium.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Regular */ @font-face { font-family: \u0026#39;RubikRegular\u0026#39;; font-weight: normal; src: url(\u0026#39;/fonts/Rubik-Regular.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } /* Rubik Light */ @font-face { font-family: \u0026#39;RubikLight\u0026#39;; font-weight: 300; src: url(\u0026#39;/fonts/Rubik-Light.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } Copy colors.css # The colors.css file is where you can replace the color references to adhere to your brand aesthetic.\n:root { --primary-gradient-color: #ffffff; --secondary-gradient-color: rgb(138, 193, 149, 0.500); --icon-color: #000000; /* Black */ /* HPE Brand Colors */ --color-brand:#8ac195; /*primary color*/ --color-brand-1:rgba(131, 122, 117, 0.667); /*secondary color*/ --color-brand-2:#acc18a; /*tertiary color*/ --color-brand-3:#86a6cf; /*note color*/ --color-brand-4:#ADD9F4; /*tip color */ --color-brand-5:#dbd985; /*security color */ --color-brand-6:#d4ac84; /*warning color */ --color-brand-7:#F3B3A6; /*danger color */ } .dark { --primary-gradient-color: rgb(138, 193, 149, 0.300); /* Change this to your dark mode color */ --secondary-gradient-color: #202020; /* Change this to your dark mode color */ --icon-color: #ffffff; /* Change this to your dark mode color */ } #articleContent [id]:target { scroll-margin-top: 50px; } Copy main.css # The main.css file is generated from the src/input.css file. All of the core styles that are brand agnostic live in these files.\nDo not directly update the main.css file; instead, edit the src/input.css file while pnpm watch-tw is active. ",
    "tags": []
  },
  {
    "id": "49618233b7f26384722bdbeca5c52a86",
    "title": "JS",
    "description": "Learn about the Javascript used in the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Assets",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/assets/js/",
    "relURI": "/reference/assets/js/",
    "body": " feedback encouragedI\u0026rsquo;m by no means a JS expert; if you feel these files can be optimized or re-written in any way, don\u0026rsquo;t hesitate to reach out on GitHub / submit a pull request. ",
    "tags": []
  },
  {
    "id": "f0741c669e32f69d1760eec213efc356",
    "title": "chatTocToggle.js",
    "description": "Learn about how the chatTocToggle.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/chattoctoggle/",
    "relURI": "/reference/assets/js/chattoctoggle/",
    "body": "The chatTocToggle.js file is used to manage the user\u0026rsquo;s discovery preference globally across the site and is associated with the following partial layouts:\nnavigation/sidebar-right.html article/chat.html article/toc.html How it Works # This script defaults to displaying the chatGPT UX experience initially. When a user selects the toggle, the ToC UX is activated and will persist site-wide.\nSource Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function (event) { const chatTocToggle = document.getElementById(\u0026#34;chatTocToggle\u0026#34;); const chatContainer = document.getElementById(\u0026#34;chatContainer\u0026#34;); const tocContainer = document.getElementById(\u0026#34;tocContainer\u0026#34;); // Check if chatTocSettings in user\u0026#39;s local storage is set; if not set or value is \u0026#39;chat\u0026#39;, toggle hidden on chatContainer; if value is \u0026#39;toc\u0026#39;, toggle the tocContainer const chatTocSettings = localStorage.getItem(\u0026#34;chatTocSettings\u0026#34;); if (chatTocSettings === null || chatTocSettings === \u0026#34;chat\u0026#34;) { chatContainer.classList.remove(\u0026#34;hidden\u0026#34;); tocContainer.classList.add(\u0026#34;hidden\u0026#34;); } else if (chatTocSettings === \u0026#34;toc\u0026#34;) { chatContainer.classList.add(\u0026#34;hidden\u0026#34;); tocContainer.classList.remove(\u0026#34;hidden\u0026#34;); } // Update the button content based on the visibility of chatContainer updateButtonContent(); // Add a click event listener to the chatTocToggle button chatTocToggle.addEventListener(\u0026#34;click\u0026#34;, function () { // Toggle both the chatContainer and tocContainer visibility chatContainer.classList.toggle(\u0026#34;hidden\u0026#34;); tocContainer.classList.toggle(\u0026#34;hidden\u0026#34;); // Update the preference and button content based on the visibility of chatContainer if (!chatContainer.classList.contains(\u0026#34;hidden\u0026#34;)) { localStorage.setItem(\u0026#34;chatTocSettings\u0026#34;, \u0026#34;chat\u0026#34;); } else { localStorage.setItem(\u0026#34;chatTocSettings\u0026#34;, \u0026#34;toc\u0026#34;); } // Update the button content after toggling updateButtonContent(); }); // Function to update the button content based on the visibility of chatContainer function updateButtonContent() { const isChatVisible = !chatContainer.classList.contains(\u0026#34;hidden\u0026#34;); chatTocToggle.innerHTML = isChatVisible ? \u0026#39;\u0026lt;img src=\u0026#34;/icons/toggle-right.svg\u0026#34; class=\u0026#34;mr-4\u0026#34;\u0026gt;\u0026#39; : \u0026#39;\u0026lt;img src=\u0026#34;/icons/toggle-left.svg\u0026#34; class=\u0026#34;mr-4\u0026#34;\u0026gt;\u0026#39;; } }); Copy ",
    "tags": []
  },
  {
    "id": "50b832cb1f95e262ee604609a59a1680",
    "title": "darkmode.js",
    "description": "Learn about how the darkmode.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/darkmode/",
    "relURI": "/reference/assets/js/darkmode/",
    "body": "The darkmode.js file is used to manage the user\u0026rsquo;s theme preference and is associated with the navigation/top.html partial layout.\n\u0026lt;div class=\u0026#34;hidden md:flex items-center space-x-4\u0026#34;\u0026gt; \u0026lt;button id=\u0026#34;chatTocToggle\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/icons/toggle-left.svg\u0026#34;\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button id=\u0026#34;darkModeToggle\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/icons/light.svg\u0026#34;\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; Copy How it Works # This script checks to if the user has darkmode saved in their local storage. If not, when toggled it: Saves the setting to local storage Adds the dark class to the html element Swaps the path for all image elements associated with the icon class from /icons/light/ to /icons/dark/ You can find the .dark class styling overrides in the assets/css/src/input.css file. Source Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function (event) { const darkModeToggle = document.getElementById(\u0026#34;darkModeToggle\u0026#34;); // Load saved theme preference const savedTheme = localStorage.getItem(\u0026#34;theme-mode\u0026#34;); if (savedTheme) { document.documentElement.classList.toggle(\u0026#34;dark\u0026#34;, savedTheme === \u0026#34;dark\u0026#34;); updateButtonText(); updateSectionIcons(); } darkModeToggle.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { const isDarkMode = document.documentElement.classList.contains(\u0026#34;dark\u0026#34;); document.documentElement.classList.toggle(\u0026#34;dark\u0026#34;, !isDarkMode); // Update the theme mode and button text localStorage.setItem( \u0026#34;theme-mode\u0026#34;, document.documentElement.classList.contains(\u0026#34;dark\u0026#34;) ? \u0026#34;dark\u0026#34; : \u0026#34;light\u0026#34; ); updateButtonText(); // Update the section icons updateSectionIcons(); }); function updateButtonText() { const isDarkMode = document.documentElement.classList.contains(\u0026#34;dark\u0026#34;); darkModeToggle.innerHTML = isDarkMode ? \u0026#39;\u0026lt;img src=\u0026#34;/icons/dark.svg\u0026#34;\u0026gt;\u0026#39; : \u0026#39;\u0026lt;img src=\u0026#34;/icons/light.svg\u0026#34;\u0026gt;\u0026#39;; } function updateSectionIcons() { const isDarkMode = document.documentElement.classList.contains(\u0026#34;dark\u0026#34;); const sectionIcons = document.querySelectorAll(\u0026#34;.icon\u0026#34;); sectionIcons.forEach((icon) =\u0026gt; { const src = icon.getAttribute(\u0026#34;src\u0026#34;); const newSrc = isDarkMode ? src.replace(\u0026#34;/icons/light/\u0026#34;, \u0026#34;/icons/dark/\u0026#34;) : src.replace(\u0026#34;/icons/dark/\u0026#34;, \u0026#34;/icons/light/\u0026#34;); icon.setAttribute(\u0026#34;src\u0026#34;, newSrc); }); } }); Copy ",
    "tags": []
  },
  {
    "id": "8d34de8eb90ed01b2927cd50bc38623d",
    "title": "glossary.js",
    "description": "Learn about how the glossary.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/glossary/",
    "relURI": "/reference/assets/js/glossary/",
    "body": "The glossary.js file is used to manage the visual \u0026ldquo;spotlight effect\u0026rdquo; experience on the glossary entries found in the glossary.html partial layout.\nHow it Works # This functionality is nearly identical to the js/tiles.js functionality \u0026ndash; with the exception of the utilized class name, glossary-entry. This is so that you can more easily customize each experience on your own if you wish. If the page has elements with the glossary-entry class, this script updates their background radial gradient values to mirror the position of the mouse.\nThe color of the spotlight effect is determined by css/colors.css, specifically:\ninside: var(--primary-gradient-color) outside: var(--secondary-gradient-color) Source Code # document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, () =\u0026gt; { const cards = document.querySelectorAll(\u0026#39;.glossary-entry\u0026#39;); const positions = { x: 50, y: 50 }; // Default to center function animate() { cards.forEach(card =\u0026gt; { const rect = card.getBoundingClientRect(); const mouseX = (positions.x - rect.left) / rect.width * 100; const mouseY = (positions.y - rect.top) / rect.height * 100; card.style.background = `radial-gradient(circle at ${mouseX}% ${mouseY}%, var(--primary-gradient-color), var(--secondary-gradient-color))`; }); requestAnimationFrame(animate); } cards.forEach(card =\u0026gt; { card.addEventListener(\u0026#39;mousemove\u0026#39;, (e) =\u0026gt; { // Update gradient position positions.x = e.clientX; positions.y = e.clientY; }); card.addEventListener(\u0026#39;mouseover\u0026#39;, () =\u0026gt; { card.style.transform = \u0026#39;translateY(-10px) scale(1.05)\u0026#39;; card.style.boxShadow = \u0026#39;0 20px 30px #00000033\u0026#39;; }); card.addEventListener(\u0026#39;mouseout\u0026#39;, () =\u0026gt; { card.style.transform = \u0026#39;translateY(0) scale(1.0)\u0026#39;; card.style.boxShadow = \u0026#39;\u0026#39;; }); }); animate(); }); Copy ",
    "tags": []
  },
  {
    "id": "7e387df19aa419befc9557282e35a584",
    "title": "main.js",
    "description": "Learn about how the main.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/main/",
    "relURI": "/reference/assets/js/main/",
    "body": "The main.js file isn\u0026rsquo;t really used at the moment, but I keep it around so people can see the default Hugo message.\nSource Code # console.log(\u0026#39;This site was generated by Hugo.\u0026#39;); Copy ",
    "tags": []
  },
  {
    "id": "7ccc8f35fb61ec46a48f5f809042bf80",
    "title": "search.js",
    "description": "Learn about how the search.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/search/",
    "relURI": "/reference/assets/js/search/",
    "body": "The search.js file is used to manage the Algolia search integration and experience.\nHow it Works # This script automatically toggles the view of a regular page versus the search page when a user inputs a search string. With every added letter, a new search is performed against the index.\nResults returned are grouped by parent article and then provided as a stacked series of links.\nfree search limitAlgolia typically allows 10,000 free monthly searches \u0026mdash; though this is subject to change. Set Up # Create an Algolia account. Provide your App ID and Search Only API Key to the searchClient (these are safe to reveal; the Admin API Key is not.). Push or upload your site\u0026rsquo;s index, found at /index.json. That\u0026rsquo;s it! Start searching.\nI personally just download this file and upload it per release; it\u0026rsquo;s a manual process \u0026mdash; but super easy. You are welcome to integrate the Algolia API with your Admin API Key to push auto updates.\nhave it your wayThere are several ways to implement Algolia; DocSearch is popular and free. I personally like to integrate the style of the UX more, but this can require more knowledge of InstantSearch.js.\nIf you like the default implementation but wish to style the search hits differently, you can do so in the performAlgoliaSearch(query) function.\nSource Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function () { const searchInput = document.getElementById(\u0026#34;searchInput\u0026#34;); const pageContainer = document.getElementById(\u0026#34;pageContainer\u0026#34;); const searchResultsContainer = document.getElementById( \u0026#34;searchResultsContainer\u0026#34; ); // Algolia configuration const searchClient = algoliasearch( \u0026#34;4TYL7GJO66\u0026#34;, // APP ID \u0026#34;4b6a7e6e3a2cf663b3e4f8a372e8453a\u0026#34; // Search Only API Key ); const searchIndex = searchClient.initIndex(\u0026#34;default\u0026#34;); // Replace \u0026#39;default\u0026#39; with your Algolia index name // Function to group search results by parent function groupResultsByParent(hits) { const groupedResults = {}; hits.forEach((hit) =\u0026gt; { const parent = hit.parent; if (!groupedResults[parent]) { groupedResults[parent] = []; } groupedResults[parent].push(hit); }); return groupedResults; } // Function to perform Algolia search and update results with more details function performAlgoliaSearch(query) { searchIndex .search(query) .then(({ hits }) =\u0026gt; { // Group search results by parent const groupedResults = groupResultsByParent(hits); // Display grouped search results in the search results container const resultsHTML = Object.keys(groupedResults).map((parent) =\u0026gt; { const parentResults = groupedResults[parent]; const parentHTML = parentResults .map((hit) =\u0026gt; { return ` \u0026lt;a href=\u0026#34;${hit.uri}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mb-4 text-black hover:bg-brand hover:text-white rounded-lg p-4 my-2 bg-zinc-100 transition duration-300 shadow-md\u0026#34;\u0026gt; \u0026lt;h3 class=\u0026#34;text-lg font-bold\u0026#34;\u0026gt;${hit.title}\u0026lt;/h3\u0026gt; \u0026lt;p class=\u0026#34;text-sm text-zinc-200\u0026#34;\u0026gt;${hit.description}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; `; }) .join(\u0026#34;\u0026#34;); return ` \u0026lt;div class=\u0026#34;mb-8\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;text-xl font-bold text-black\u0026#34;\u0026gt;${parent}\u0026lt;/h2\u0026gt; ${parentHTML} \u0026lt;/div\u0026gt; `; }); searchResultsContainer.innerHTML = resultsHTML.join(\u0026#34;\u0026#34;); }) .catch((err) =\u0026gt; { console.error(err); }); } // Event listener for typing in the search input searchInput.addEventListener(\u0026#34;input\u0026#34;, () =\u0026gt; { const inputValue = searchInput.value.trim(); // Toggle \u0026#34;hidden\u0026#34; class based on whether there is input in the search field if (inputValue !== \u0026#34;\u0026#34;) { // Show search results container and hide page container searchResultsContainer.classList.remove(\u0026#34;hidden\u0026#34;); pageContainer.classList.add(\u0026#34;hidden\u0026#34;); // Trigger Algolia search with the input value performAlgoliaSearch(inputValue); } else { // Show page container and hide search results container searchResultsContainer.classList.add(\u0026#34;hidden\u0026#34;); pageContainer.classList.remove(\u0026#34;hidden\u0026#34;); } }); }); Copy ",
    "tags": []
  },
  {
    "id": "148bf8b882b1c35e2dc0167d162010b2",
    "title": "sidebar-left.js",
    "description": "Learn about how the sidebar-left.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/sidebar-left/",
    "relURI": "/reference/assets/js/sidebar-left/",
    "body": "The sidebar-left.js file is used to manage the scroll-into-view link experience in the navigation/sidebar-left.html partial layout.\nHow it Works # The script finds the active link via [data-current=\u0026quot;true] attribute set by logic in the sidebar-left.html template. After a 300ms delay, it scrolls until the active link is visible. Source Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function () { var activeLink = document.querySelector(\u0026#39;[data-current=\u0026#34;true\u0026#34;]\u0026#39;); // Function to scroll to the link with a delay function scrollToLink(link) { if (link) { setTimeout(function () { link.scrollIntoView({ behavior: \u0026#34;smooth\u0026#34;, block: \u0026#34;nearest\u0026#34;, inline: \u0026#34;start\u0026#34;, }); }, 300); } } scrollToLink(activeLink); var links = document.querySelectorAll(\u0026#34;a[data-level]\u0026#34;); var currentUrl = window.location.href; // Function to handle the visibility of nested lists function handleVisibility() { // Initially hide all levels greater than 2 links.forEach(function (link) { var level = parseInt(link.getAttribute(\u0026#34;data-level\u0026#34;)); if (level \u0026gt; 1) { link.closest(\u0026#34;li\u0026#34;).classList.add(\u0026#34;hidden\u0026#34;); } }); links.forEach(function (link) { if (link.href === currentUrl) { link.classList.add(\u0026#34;text-brand\u0026#34;); // Unhide all ancestor li elements var ancestor = link.closest(\u0026#34;li\u0026#34;); while (ancestor) { if (ancestor.tagName.toLowerCase() === \u0026#34;li\u0026#34;) { ancestor.classList.remove(\u0026#34;hidden\u0026#34;); } ancestor = ancestor.parentElement; } // Unhide direct siblings at the same level var parentLi = link.closest(\u0026#34;li\u0026#34;); var siblingLis = Array.from(parentLi.parentElement.children).filter( function (child) { return child !== parentLi; } ); siblingLis.forEach(function (siblingLi) { siblingLi.classList.remove(\u0026#34;hidden\u0026#34;); }); } }); } // Call the handleVisibility function handleVisibility(); }); Copy ",
    "tags": []
  },
  {
    "id": "e76961636a2e4e109f2ba5b5aa64e007",
    "title": "tabs.js",
    "description": "Learn about how the tabs.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/tabs/",
    "relURI": "/reference/assets/js/tabs/",
    "body": "The tabs.js file is used to manage the tabbed experience created by a combination of shortcodes found in /layouts/shortcodes/tabs.\ncontainer tabButtons tab tabContentsContainer tabContent \u0026lt;!--tabs/container.html --\u0026gt; \u0026lt;section class=\u0026#34;bg-zinc-100 p-2 my-2 rounded-md\u0026#34; data-component=\u0026#34;tabs\u0026#34;\u0026gt; {{- .Inner -}} \u0026lt;/section\u0026gt; Copy \u0026lt;!-- tabs/tabButtons.html --\u0026gt; \u0026lt;div class=\u0026#34;flex ml-4 mt-2 space-x-2\u0026#34; data-tab-id=\u0026#34;{{ .Get \u0026#34;id\u0026#34; | lower | urlize }}\u0026#34;\u0026gt; {{ .Inner }} \u0026lt;/div\u0026gt; Copy \u0026lt;!--tabs/tab.html --\u0026gt; {{ $state := .Get \u0026#34;state\u0026#34; | lower}} \u0026lt;button data-tab-option=\u0026#34;{{ .Parent.Get \u0026#34;id\u0026#34; | lower |urlize }}/{{ .Get \u0026#34;option\u0026#34; | lower | urlize }}\u0026#34; type=\u0026#34;button\u0026#34; class=\u0026#34;px-4 py-2 border rounded {{if eq $state \u0026#34;active\u0026#34;}}bg-brand text-white {{else}} bg-white text-black{{end}}\u0026#34;\u0026gt;{{ .Get \u0026#34;option\u0026#34; }}\u0026lt;/button\u0026gt; Copy \u0026lt;!-- tabs/tabContentsContainer.html --\u0026gt; \u0026lt;div class=\u0026#34;w-full p-2\u0026#34; \u0026gt; {{- .Inner -}} \u0026lt;/div\u0026gt; Copy \u0026lt;!-- tabs/tabContent.html --\u0026gt; {{$val1 := .Get \u0026#34;val1\u0026#34; | lower }} {{$val2 := .Get \u0026#34;val2\u0026#34; | lower}} {{$val3 := .Get \u0026#34;val3\u0026#34; | lower}} {{$val4 := .Get \u0026#34;val4\u0026#34; | lower}} {{$val5 := .Get \u0026#34;val5\u0026#34; | lower}} {{$val6 := .Get \u0026#34;val6\u0026#34; | lower}} {{$val7 := .Get \u0026#34;val7\u0026#34; | lower}} {{$answer := $val1}} {{ with $val2 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val3 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val4 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val5 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val6 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val7 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} \u0026lt;div class=\u0026#34;p-2 mb-2\u0026#34; data-tabcontent=\u0026#34;{{$answer}}\u0026#34; \u0026gt; {{- .Inner | markdownify -}} \u0026lt;/div\u0026gt; Copy How it Works # If a page has elements with [data-component=\u0026quot;tabs\u0026quot;], the script collects them all into an array. For each collection of tabs, it then collects the button options ([data-tab-id])and corresponding tabbed markdown content ([data-tabcontent]). Event listeners are setup for each button; when selected, the corresponding content is revealed and the button highlighted; other options are hidden/muted. Source Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function(event) { if (document.querySelectorAll(\u0026#39;[data-component=\u0026#34;tabs\u0026#34;]\u0026#39;)) { var tabs = document.querySelectorAll(\u0026#39;[data-component=\u0026#34;tabs\u0026#34;]\u0026#39;); console.log(\u0026#34;tabs \u0026#34;, tabs) tabs.forEach(function(tab) { // get each child step element with the data-wizard-id attribute let options = tab.querySelectorAll(\u0026#39;[data-tab-id]\u0026#39;); let optionContent = tab.querySelectorAll(\u0026#39;[data-tabcontent]\u0026#39;); // Changed to lowercase \u0026#39;c\u0026#39; getAnswers({tab, optionContent}) // listen for click on button elements within each step options.forEach((option) =\u0026gt; { // get all of the buttons within the step let buttons = option.querySelectorAll(\u0026#39;button\u0026#39;) // listen for click on each button buttons.forEach((button) =\u0026gt; { button.addEventListener(\u0026#39;click\u0026#39;, (e) =\u0026gt; { // add green class to the clicked button e.target.classList.remove(\u0026#39;bg-white\u0026#39;, \u0026#39;text-black\u0026#39;) e.target.classList.add(\u0026#39;bg-brand\u0026#39;, \u0026#39;text-white\u0026#39;) // remove green class from the other buttons buttons.forEach((button) =\u0026gt; { if (button !== e.target) { button.classList.remove(\u0026#39;bg-brand\u0026#39;, \u0026#39;text-white\u0026#39;) button.classList.add(\u0026#39;bg-white\u0026#39;, \u0026#39;text-black\u0026#39;) } }) getAnswers({tab, optionContent}) }) }) }) }); function getAnswers({tab, optionContent}){ // get all buttons with the green class let activeButtons = tab.querySelectorAll(\u0026#39;button.bg-brand\u0026#39;) // get the data-tab-option attribute of all the buttons with the green class let activeButtonOptions = [] console.log(\u0026#34;activeButtonOptions \u0026#34;, activeButtonOptions) activeButtons.forEach((button) =\u0026gt; { console.log(\u0026#34;activeButton \u0026#34;, button) activeButtonOptions.push(button.getAttribute(\u0026#39;data-tab-option\u0026#39;)) // Changed to data-tab-option }) console.log(\u0026#34;activeButtonOptions \u0026#34;, activeButtonOptions) let convertedText = activeButtonOptions.join(\u0026#39;/\u0026#39;).toLowerCase() // hide all other answers optionContent.forEach((content) =\u0026gt; { let value = content.getAttribute(\u0026#39;data-tabcontent\u0026#39;) console.log(`value: ` + value) console.log(`convertedText: ` + convertedText) if (value !== convertedText) { content.classList.add(\u0026#39;hidden\u0026#39;) } else { content.classList.remove(\u0026#39;hidden\u0026#39;) } }) } } }); Copy ",
    "tags": []
  },
  {
    "id": "59c4cfecde9da20328c8ebffa6ecbf52",
    "title": "tiles.js",
    "description": "Learn about how the tiles.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/tiles/",
    "relURI": "/reference/assets/js/tiles/",
    "body": "The tiles.js file is used to manage the visual \u0026ldquo;spotlight effect\u0026rdquo; experience on the article tiles found in the article/tiles.html partial layout.\nHow it Works # This functionality is nearly identical to the js/glossary.js functionality \u0026ndash; with the exception of the utilized class name, tile If the page has elements with the tile class, this script updates their background radial gradient values to mirror the position of the mouse.\nThe color of the spotlight effect is determined by css/colors.css, specifically:\ninside: var(--primary-gradient-color) outside: var(--secondary-gradient-color) Source Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { if (document.querySelectorAll(\u0026#34;.tile\u0026#34;)) { const cards = document.querySelectorAll(\u0026#34;.tile\u0026#34;); const positions = { x: 50, y: 50 }; // Default to center function animate() { cards.forEach((card) =\u0026gt; { const rect = card.getBoundingClientRect(); const mouseX = ((positions.x - rect.left) / rect.width) * 100; const mouseY = ((positions.y - rect.top) / rect.height) * 100; card.style.background = `radial-gradient(circle at ${mouseX}% ${mouseY}%, var(--primary-gradient-color), var(--secondary-gradient-color))`; }); requestAnimationFrame(animate); } cards.forEach((card) =\u0026gt; { card.addEventListener(\u0026#34;mousemove\u0026#34;, (e) =\u0026gt; { // Update gradient position positions.x = e.clientX; positions.y = e.clientY; }); card.addEventListener(\u0026#34;mouseover\u0026#34;, () =\u0026gt; { card.style.transform = \u0026#34;translateY(-10px) scale(1.05)\u0026#34;; card.style.boxShadow = \u0026#34;0 20px 30px #00000033\u0026#34;; }); card.addEventListener(\u0026#34;mouseout\u0026#34;, () =\u0026gt; { card.style.transform = \u0026#34;translateY(0) scale(1.0)\u0026#34;; card.style.boxShadow = \u0026#34;\u0026#34;; }); }); animate(); } }); Copy ",
    "tags": []
  },
  {
    "id": "a16e8a359e9b5e546c319c7c9fb95756",
    "title": "toc.js",
    "description": "Learn about how the toc.js file works for this theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "JS",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/assets/js/toc/",
    "relURI": "/reference/assets/js/toc/",
    "body": "The toc.js file is used to manage the \u0026ldquo;scrolling-section-highlight effect\u0026rdquo; experience on the table of contents found in the navigation/sidebar-right.html partial layout.\nHow it Works # If the page has an element with the ID #TableOfContents, this script collects the associated links and highlights them based on scrolling behavior:\nScrolling Down: it highlights the next h2 or h3 as soon as it comes into view. Scrolling Up: it highlights the previous h2 or h3 as soon as the lowest one exits view. Source Code # document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { // Get all TOC links const tocLinks = document.querySelectorAll(\u0026#34;#TableOfContents a\u0026#34;); // Function to highlight the currently viewed section function highlightInView() { const sections = document.querySelectorAll(\u0026#34;h2, h3\u0026#34;); // You may need to adjust the selector based on your HTML structure // Define the top offset (50px in this example) const offset = 50; // Loop through the sections to find the currently viewed one sections.forEach((section) =\u0026gt; { const rect = section.getBoundingClientRect(); // Adjust the condition with the offset if ( rect.top + offset \u0026gt;= 0 \u0026amp;\u0026amp; rect.bottom \u0026lt;= window.innerHeight + offset ) { // Section is in view const sectionId = section.id; tocLinks.forEach((link) =\u0026gt; { if (link.getAttribute(\u0026#34;href\u0026#34;).substring(1) === sectionId) { // Remove the highlight class from all TOC links tocLinks.forEach((tocLink) =\u0026gt; { tocLink.classList.remove(\u0026#34;text-brand\u0026#34;); }); // Add the highlight class to the currently viewed TOC link link.classList.add(\u0026#34;text-brand\u0026#34;); } }); } }); } // Attach the scroll event listener to the window window.addEventListener(\u0026#34;scroll\u0026#34;, highlightInView); }); Copy ",
    "tags": []
  },
  {
    "id": "48c8b7ba57f066a4aece9f46691aeae4",
    "title": "Layouts",
    "description": "Learn about the layouts that make up the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Reference",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/layouts/",
    "relURI": "/reference/layouts/",
    "body": "",
    "tags": []
  },
  {
    "id": "153e0157502c62da5fe535499b9273a7",
    "title": "shortcodes",
    "description": "Learn how to apply shortcodes to display or transform content in markdown files.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Layouts",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/",
    "relURI": "/reference/layouts/shortcodes/",
    "body": "This theme uses a variety of shortcodes to enable authors of technical documentation.\n",
    "tags": []
  },
  {
    "id": "e6d189ae8c5a138e088d86df999d208b",
    "title": "include.html",
    "description": "learn how to use the literal shortcode",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "shortcodes",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/include/",
    "relURI": "/reference/layouts/shortcodes/include/",
    "body": " Inline code samples are great \u0026mdash; but code samples that are pulled from source files can be even better! This {{%include%}} shortcode is inspired by Sphinx\u0026rsquo;s .. literalinclude:: functionality.\nThis document is going to be a bit meta. How it Works # The {{%include%}} shortcode accepts 3 positional args: lang, start, and stop. All are optional.\nDon\u0026#39;t forget to use %This shortcode relies on Hugo\u0026rsquo;s markdown rendering to automatically handle code syntax highlighting. If you surround this shortcode with \u0026lt; \u0026gt; instead, it will break. Examples # This File # --- title: include.html description: learn how to use the literal shortcode --- \u0026lt;!--start --\u0026gt; Inline code samples are great --- but code samples that are pulled from source files can be even better! This `{{%/*include*/%}}` shortcode is inspired by Sphinx\u0026#39;s `.. literalinclude::` functionality. {{\u0026lt;notice snack\u0026gt;}} This document is going to be a bit meta. {{\u0026lt;/notice\u0026gt;}} ## How it Works The `{{%/*include*/%}}` shortcode accepts 3 **positional** args: `lang`, `start`, and `stop`. All are optional. {{\u0026lt;notice warning \u0026#34;Don\u0026#39;t forget to use %\u0026#34;\u0026gt;}} This shortcode relies on Hugo\u0026#39;s markdown rendering to automatically handle code syntax highlighting. If you surround this shortcode with `\u0026lt;` `\u0026gt;` instead, it will break. {{\u0026lt;/notice\u0026gt;}} ### Examples ### This File {{%include \u0026#34;reference/layouts/shortcodes/include.md\u0026#34; \u0026#34;md\u0026#34; %}} ### Python File With Comments {{%include \u0026#34;static/demo-package.py\u0026#34; \u0026#34;python\u0026#34; \u0026#34;# Start 1\u0026#34; \u0026#34;# End 1\u0026#34; %}} ## Source Code {{%include \u0026#34;layouts/shortcodes/include.html\u0026#34; \u0026#34;go\u0026#34; %}} Copy Python File With Comments # def demo_function(arg1, arg2): \u0026#34;\u0026#34;\u0026#34;Demo Function This function takes two arguments and returns their sum. Args: arg1 (int): The first argument. arg2 (int): The second argument. Returns: int: The sum of arg1 and arg2. \u0026#34;\u0026#34;\u0026#34; return arg1 + arg2 Copy Source Code # {{ $path := .Get 0 }} {{ $lang := .Get 1 | default \u0026#34;s\u0026#34; }} {{ $start := .Get 2 | default nil }} {{ $stop := .Get 3 | default nil}} {{ $content := readFile $path }} {{ $chunked := split $content \u0026#34;\\n\u0026#34; }} {{ $snippet := \u0026#34;\u0026#34; }} {{ $capture := false }} {{if eq $start nil }} {{ $capture = true }} {{end}} {{- range $chunked }} {{ if and (not $capture) (in . $start) }} {{ $capture = true }} {{ else if and $capture (in . $stop) }} {{ $capture = false }} {{ else if $capture }} {{ $snippet = print $snippet . \u0026#34;\\n\u0026#34; }} {{ end }} {{- end }} {{ printf \u0026#34;```%s\\n%s\\n```\u0026#34; $lang $snippet | safeHTML }} Copy ",
    "tags": []
  },
  {
    "id": "6099d317fae0143a5ae1fa0ee0e34161",
    "title": "notice.html",
    "description": "learn how to use the notice shortcode",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "shortcodes",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/notice/",
    "relURI": "/reference/layouts/shortcodes/notice/",
    "body": "Occasionally you might need to make admonitions, callouts, or notices in your documentation. Use the {{\u0026lt;notice\u0026gt;}} shortcode to display these.\nHow it Works # The {{\u0026lt;notice\u0026gt;}} shortcode accepts 2 positional args: type and title. Both are optional. If no type is set, the notice defaults to info.\nExamples # without typeThis is a default notice. want a cookie?This is a snack notice. you don\u0026#39;t have to add a titleThis is a tip notice. there\u0026#39;s a lot of optionsThis is a note notice. probably redundant with noteThis is a info notice. hugo is safeThis is a security notice. don\u0026#39;t use lightmode at nightThis is a warning notice. cats may destroy furnitureThis is a danger notice. {{\u0026lt; notice \u0026#34;\u0026#34; \u0026#34;without type\u0026#34; \u0026gt;}} This is a **default** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice snack \u0026#34;want a cookie?\u0026#34; \u0026gt;}} This is a **snack** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice tip \u0026#34;you don\u0026#39;t have to add a title\u0026#34;\u0026gt;}} This is a **tip** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice note \u0026#34;there\u0026#39;s a lot of options\u0026#34; \u0026gt;}} This is a **note** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice info \u0026#34;probably redundant with note\u0026#34; \u0026gt;}} This is a **info** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice security \u0026#34;hugo is safe\u0026#34; \u0026gt;}} This is a **security** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice warning \u0026#34;don\u0026#39;t use lightmode at night\u0026#34; \u0026gt;}} This is a **warning** notice. {{\u0026lt; /notice \u0026gt;}} {{\u0026lt; notice danger \u0026#34;cats may destroy furniture\u0026#34; \u0026gt;}} This is a **danger** notice. {{\u0026lt; /notice \u0026gt;}} Copy Source Code # {{ $type := .Get 0 | default \u0026#34;info\u0026#34; }} {{ $title := .Get 1 }} \u0026lt;div class=\u0026#34;notice p-4 mt-2 mb-2 rounded-md shadow-md {{- with $type }} {{if eq . \u0026#34;danger\u0026#34; }} bg-brand-7 {{else if eq . \u0026#34;warning\u0026#34; }} bg-brand-6 {{else if eq . \u0026#34;security\u0026#34; }} bg-brand-5 {{else if eq . \u0026#34;tip\u0026#34; }} bg-brand-4 {{else if eq . \u0026#34;note\u0026#34; }} bg-brand-3 {{else if eq . \u0026#34;info\u0026#34; }} bg-brand-2 {{else if eq . \u0026#34;snack\u0026#34; }} bg-brand-1 {{ end }} {{- end }} \u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;flex\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;flex-shrink-0\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/icons/light/ {{- with $type}} {{- if eq . \u0026#34;danger\u0026#34; -}} danger {{- else if eq . \u0026#34;warning\u0026#34; -}} warning {{- else if eq . \u0026#34;security\u0026#34; -}} security {{- else if eq . \u0026#34;info\u0026#34; -}} info {{- else if eq . \u0026#34;note\u0026#34; -}} note {{- else if eq . \u0026#34;tip\u0026#34; -}} tip {{- else if eq . \u0026#34;snack\u0026#34; -}} snack {{- end -}} {{- end -}} .svg\u0026#34; class=\u0026#34;icon\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;ml-3 w-full text-black text-sm\u0026#34;\u0026gt; {{- if $title -}} \u0026lt;div class=\u0026#34;font-brand-bold mb-2\u0026#34;\u0026gt;{{ $title }}\u0026lt;/div\u0026gt; {{- end -}} {{- .Inner | markdownify }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Copy ",
    "tags": []
  },
  {
    "id": "d5e4788a4d8c3c0bc34e494573ee7577",
    "title": "pdoc.html",
    "description": "learn how to use the pdoc shortcode",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "shortcodes",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/pdoc/",
    "relURI": "/reference/layouts/shortcodes/pdoc/",
    "body": "It\u0026rsquo;s common for developers to build packages in Python that need auto-generated code documentation based off of Python strings.\nTo better support integrating that collection to your larger docs site, I\u0026rsquo;ve built out a {{\u0026lt;pdoc\u0026gt;}} shortcode that enables you to automatically target links for:\nSupermodules Submodules Functions Classes Methods How complex is the package?If you are integrating pdoc documentation for a package that has submodules, use the default pdoc shortcode. For simple packages without submodules, use pdoc-2. How it Works # The {{\u0026lt;pdoc\u0026gt;}} shortcode accepts 3 positional args: type, target, and linktitle (optional). If linktitle is not set, it automatically configures the link text as show in the following sections.\npdoc # Type (arg0) Target (arg1) Result supermodule ~pkg.super /references/pkg/super submodule ~pkg.super.sub /references/pkg/super function ~pkg.super.func /references/pkg/super/sub#package.super.sub.func class ~pkg.super.sub.class /references/pkg/super/sub#package.super.sub.class method ~pkg.super.sub.class.meth /references/pkg/super/sub#pkg.super.sub.class.meth pdoc-2 # Type (arg0) Target (arg1) Result function ~pkg.super.func_name /references/pkg.html#pkg.func class ~pkg.super.sub.class /references/pkg.html#pkg.class method ~pkg.super.sub.class.method /references/pkg.html#pkg.class.meth Examples # demo_function() DemoClass() demo_method() - {{\u0026lt; pdoc-2 \u0026#34;function\u0026#34; \u0026#34;~demo-package.demo_function\u0026#34; \u0026gt;}} - {{\u0026lt; pdoc-2 \u0026#34;class\u0026#34; \u0026#34;~demo-package.DemoClass\u0026#34; \u0026gt;}} - {{\u0026lt; pdoc-2 \u0026#34;method\u0026#34; \u0026#34;~demo-package.DemoClass.demo_method\u0026#34; \u0026gt;}} Copy Source Code # Want to change the main directory?You can change the default directory where this shortcode looks for pdoc collections by updating the value of $baseurl. Alternatively, you could make this shortcode more advanced and remove that static baseurl piece altogether. \u0026lt;!-- layouts/shortcodes/det.html --\u0026gt; {{ $type := index (.Params) 0 }} {{ $path := index (.Params) 1 }} {{ $title := index (.Params) 2}} {{ $baseurl := \u0026#34;/references/\u0026#34; }} {{ $anchor := \u0026#34;\u0026#34; }} {{ $linkText := \u0026#34;\u0026#34; }} {{ $trimmed_path := strings.TrimPrefix \u0026#34;~\u0026#34; $path }} {{ $path_parts := split $trimmed_path \u0026#34;.\u0026#34; }} {{ if eq $type \u0026#34;supermodule\u0026#34; }} {{/* url pattern for supermodule: {baseurl}/directory/supermodule/ */}} {{ $baseurl = printf \u0026#34;%s%s/%s/\u0026#34; $baseurl (index $path_parts 0) (index $path_parts 1) }} {{ $linkText = (index $path_parts 1) }} {{ else if eq $type \u0026#34;submodule\u0026#34; }} {{/* url pattern for submodule: {baseurl}/directory/supermodule/submodule.html */}} {{ $baseurl = printf \u0026#34;%s%s/%s/%s.html\u0026#34; $baseurl (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) }} {{ $linkText = printf \u0026#34;%s.%s\u0026#34; (index $path_parts 2) (index $path_parts 1) }} {{ else if eq $type \u0026#34;class\u0026#34; }} {{/* url pattern for class: {baseurl}/directory/supermodule/submodule.html#directory.supermodule.submodule.class */}} {{ $baseurl = printf \u0026#34;%s%s/%s/%s.html\u0026#34; $baseurl (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) }} {{ $anchor = printf \u0026#34;#%s.%s.%s.%s\u0026#34; (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) (index $path_parts 3) }} {{ $linkText = printf \u0026#34;%s.%s()\u0026#34; (index $path_parts 2) (index $path_parts 3) }} {{ else if eq $type \u0026#34;function\u0026#34; }} {{/* url pattern for function: {baseurl}/directory/supermodule/submodule.html#directory.supermodule.submodule.function */}} {{ $baseurl = printf \u0026#34;%s%s/%s/%s.html\u0026#34; $baseurl (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) }} {{ $anchor = printf \u0026#34;#%s.%s.%s.%s\u0026#34; (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) (index $path_parts 3) }} {{ $linkText = printf \u0026#34;%s.%s()\u0026#34; (index $path_parts 2) (index $path_parts 3) }} {{ else if eq $type \u0026#34;method\u0026#34; }} {{/* url pattern for method: {baseurl}/directory/supermodule/submodule.html#directory.supermodule.submodule.class.method */}} {{ $baseurl = printf \u0026#34;%s%s/%s/%s.html\u0026#34; $baseurl (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) }} {{ $anchor = printf \u0026#34;#%s.%s.%s.%s.%s\u0026#34; (index $path_parts 0) (index $path_parts 1) (index $path_parts 2) (index $path_parts 3) (index $path_parts 4) }} {{ $linkText = printf \u0026#34;%s.%s.%s()\u0026#34; (index $path_parts 2) (index $path_parts 3) (index $path_parts 4) }} {{else}} {{ errorf \u0026#34;The %q shortcode requires a type parameter as arg 0 (module, submodule, class, function, method). See %s\u0026#34; .Name .Position }} {{ end }} \u0026lt;a href=\u0026#34;{{ $baseurl }}{{ $anchor }}\u0026#34; class=\u0026#34;font-bold underline\u0026#34;\u0026gt;{{with $title}}{{.}}{{else}}{{ $linkText }}{{end}}\u0026lt;/a\u0026gt; Copy ",
    "tags": []
  },
  {
    "id": "81cac6afd5d0bf666c2eb3e6c88ae074",
    "title": "prod.html",
    "description": "learn how to use the prod shortcode",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "shortcodes",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/prod/",
    "relURI": "/reference/layouts/shortcodes/prod/",
    "body": "Occasionally it is useful to use a variable that represents your product name \u0026mdash; especially when documenting a project or startup product that is likely to undergo rebranding.\nHow it Works # The {{\u0026lt;prod\u0026gt;}} shortcode prints out a string for your main product name defined in your site configuration.\nOpen your repo. Navigate to the themes/milo/hugo.yaml file. Update the following: # Theme Feature Settings params: names: product: \u0026#39;Milo Docs\u0026#39; Copy Header Constraints for TOCsTo ensure Hugo resolves this shortcode correctly in the Table of Contents of your articles, make sure that you use the % wrapper instead of \u0026lt; \u0026gt; in your headers.\nExample Error Output: HAHAHUGOSHORTCOD...\nExamples # This is the MiloDocs theme.\nThis is the {{\u0026lt;prod\u0026gt;}} theme. Copy Source Code # {{- with .Site.Params.names.product}}{{.}}{{end}} Copy ",
    "tags": []
  },
  {
    "id": "b40a54faaa782c59e52f7c098cba53cd",
    "title": "tabs.html",
    "description": "learn how to use the tabs shortcode",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "shortcodes",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/tabs/",
    "relURI": "/reference/layouts/shortcodes/tabs/",
    "body": "Tabs are a great way to organize content that is contextually relevant but divergent in format or procedure (without necessarily needing its own page). This combination of shortcodes allows you to create a tabbed interface. I first encountered this implementation strategy while reading the MiniKube docs.\nHow it Works # There are 5 shortcodes that make up the tabs UX.\nshortcode description input {{\u0026lt;tabs/container\u0026gt;}} This is the container for the entire tabs UX. n/a {{\u0026lt;tabs/tabButtons\u0026gt;}} This is the container for the tab buttons. id string {{\u0026lt;tabs/tab\u0026gt;}} This is the button that will be clicked to show the tab content. option string; state string {{\u0026lt;tabs/tabContentsContainer\u0026gt;}} This is the container for the tab content. n/a {{\u0026lt;tabs/tabContent\u0026gt;}} This is the content that will be shown when the tab button is clicked. markdown Set Tab as DefaultWhen an option has the default state of active, it will be the first tab shown. Example # Console CLI Ensure your DemoTool server is running and connected. Navigate to Console. Run demoCLI connect. {{\u0026lt;tabs/container\u0026gt;}} {{\u0026lt;tabs/tabButtons id=\u0026#34;launch-method\u0026#34;\u0026gt;}} {{\u0026lt;tabs/tab option=\u0026#34;Console\u0026#34; state=\u0026#34;active\u0026#34;\u0026gt;}} {{\u0026lt;tabs/tab option=\u0026#34;CLI\u0026#34;\u0026gt;}} {{\u0026lt;/tabs/tabButtons\u0026gt;}} {{\u0026lt;tabs/tabContentsContainer\u0026gt;}} {{\u0026lt;tabs/tabContent val1=\u0026#34;launch-method/console\u0026#34;\u0026gt;}} 1. Ensure your DemoTool server is running and connected. 2. Navigate to Console. {{\u0026lt; /tabs/tabContent \u0026gt;}} {{\u0026lt; tabs/tabContent val1=\u0026#34;launch-method/cli\u0026#34; \u0026gt;}} 1. Run `demoCLI connect`. {{\u0026lt;/tabs/tabContent\u0026gt;}} {{\u0026lt;/tabs/tabContentsContainer\u0026gt;}} {{\u0026lt;/tabs/container\u0026gt;}} Copy Source Code # container tabButtons tab tabContentsContainer tabContent \u0026lt;!--tabs/container.html --\u0026gt; \u0026lt;section class=\u0026#34;bg-zinc-100 p-2 my-2 rounded-md\u0026#34; data-component=\u0026#34;tabs\u0026#34;\u0026gt; {{- .Inner -}} \u0026lt;/section\u0026gt; Copy \u0026lt;!-- tabs/tabButtons.html --\u0026gt; \u0026lt;div class=\u0026#34;flex ml-4 mt-2 space-x-2\u0026#34; data-tab-id=\u0026#34;{{ .Get \u0026#34;id\u0026#34; | lower | urlize }}\u0026#34;\u0026gt; {{ .Inner }} \u0026lt;/div\u0026gt; Copy \u0026lt;!--tabs/tab.html --\u0026gt; {{ $state := .Get \u0026#34;state\u0026#34; | lower}} \u0026lt;button data-tab-option=\u0026#34;{{ .Parent.Get \u0026#34;id\u0026#34; | lower |urlize }}/{{ .Get \u0026#34;option\u0026#34; | lower | urlize }}\u0026#34; type=\u0026#34;button\u0026#34; class=\u0026#34;px-4 py-2 border rounded {{if eq $state \u0026#34;active\u0026#34;}}bg-brand text-white {{else}} bg-white text-black{{end}}\u0026#34;\u0026gt;{{ .Get \u0026#34;option\u0026#34; }}\u0026lt;/button\u0026gt; Copy \u0026lt;!-- tabs/tabContentsContainer.html --\u0026gt; \u0026lt;div class=\u0026#34;w-full p-2\u0026#34; \u0026gt; {{- .Inner -}} \u0026lt;/div\u0026gt; Copy \u0026lt;!-- tabs/tabContent.html --\u0026gt; {{$val1 := .Get \u0026#34;val1\u0026#34; | lower }} {{$val2 := .Get \u0026#34;val2\u0026#34; | lower}} {{$val3 := .Get \u0026#34;val3\u0026#34; | lower}} {{$val4 := .Get \u0026#34;val4\u0026#34; | lower}} {{$val5 := .Get \u0026#34;val5\u0026#34; | lower}} {{$val6 := .Get \u0026#34;val6\u0026#34; | lower}} {{$val7 := .Get \u0026#34;val7\u0026#34; | lower}} {{$answer := $val1}} {{ with $val2 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val3 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val4 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val5 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val6 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} {{ with $val7 }} {{$answer = printf \u0026#34;%s/%s\u0026#34; $answer .}} {{ end }} \u0026lt;div class=\u0026#34;p-2 mb-2\u0026#34; data-tabcontent=\u0026#34;{{$answer}}\u0026#34; \u0026gt; {{- .Inner | markdownify -}} \u0026lt;/div\u0026gt; Copy ",
    "tags": []
  },
  {
    "id": "3a9b605cda84a68d74370ef8dc4247a2",
    "title": "version.html",
    "description": "learn how to use the version shortcode",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "shortcodes",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/shortcodes/version/",
    "relURI": "/reference/layouts/shortcodes/version/",
    "body": "If the project you are documenting must be installed, it is likely that your documentation needs to be versioned. In this scenario, it\u0026rsquo;s especially useful to have a shortcode that can also version your download links, github links, announcements, and similar assets without having to manually update them across all of your articles.\nHow it Works # Set up a content/latest directory to begin versioning your documentation. Add the following frontmatter to content/latest/_index.md, updating the version numbers: cascade: version: isLatest: true major: 0 minor: 0 patch: 0 Copy Use the {{\u0026lt;version\u0026gt;}} shortcode to print out the collection\u0026rsquo;s versions anywhere beneath the directory. Examples # MiloDocs Theme does not actually have versioned documentation; this is just for demonstration purposes. Local Version # The default functionality for this shortcode uses the version numbers cascading from the root of the versioned directory (e.g., content/latest, content/1.0.2).\n0.0.2 is now live! 0.0.2 Download - **{{\u0026lt;version\u0026gt;}} is now live!** - [{{\u0026lt;version\u0026gt;}} Download](https://github.com/org/project/releases/tag/v{{\u0026lt;version\u0026gt;}}) Copy Global Version # In cases where you want to mention or link to the latest version in older versions of your content, you can add {{\u0026lt;version \u0026quot;global\u0026quot;\u0026gt;}}. This uses the site-wide parameter to determine what version number to use.\n\u0026lt;!-- hugo.yaml --\u0026gt; # Theme Feature Settings params: [...] version: major: 0 minor: 0 patch: 3 Copy 0.0.3 is now live! 0.0.3 Download - **{{\u0026lt;version \u0026#34;global\u0026#34;\u0026gt;}} is now live!** - [{{\u0026lt;version \u0026#34;global\u0026#34;\u0026gt;}} Download](https://github.com/org/project/releases/tag/v{{\u0026lt;version \u0026#34;global\u0026#34;\u0026gt;}}) Copy Source Code # {{- $source := index (.Params) 0 | default \u0026#34;local\u0026#34; }} {{- $major := \u0026#34;\u0026#34;}} {{- $minor := \u0026#34;\u0026#34;}} {{- $patch := \u0026#34;\u0026#34;}} {{- $value := \u0026#34;\u0026#34;}} {{- if eq $source \u0026#34;global\u0026#34; }} {{- $major = .Site.Params.Version.Major }} {{- $minor = .Site.Params.Version.Minor }} {{- $patch = .Site.Params.Version.Patch }} {{- else}} {{- $major = .Page.Params.Version.Major }} {{- $minor = .Page.Params.Version.Minor }} {{- $patch = .Page.Params.Version.Patch }} {{- end}} {{- $value = print $major \u0026#34;.\u0026#34; $minor \u0026#34;.\u0026#34; $patch }} {{- $value }} Copy ",
    "tags": []
  },
  {
    "id": "61e1288240b0c65fc5a8762ec3e98069",
    "title": "partials",
    "description": "Learn how to conditionally configure default layouts with added functionality and data.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Layouts",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/layouts/partials/",
    "relURI": "/reference/layouts/partials/",
    "body": "",
    "tags": []
  },
  {
    "id": "b06629ce1be51b7d7a0e7ea4b0de008d",
    "title": "head",
    "description": "Learn about the head partial.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "partials",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/layouts/partials/head/",
    "relURI": "/reference/layouts/partials/head/",
    "body": "The head.html partial layout houses:\nall of the metadata that needs to be generated for every article a link to the bundled \u0026amp; minified CSS (@head/css.html) a link to the bundled \u0026amp; minified JS (@head/js.html) How it Works # This partial is fed into the baseof.html default layout. Each individual page is passed through this template as context {{ partial \u0026quot;head.html\u0026quot; . }} All metadata is populated from page frontmatter. All assets are applied. Source Code # \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;title\u0026#34; content=\u0026#34;{{with .Parent}}{{.Title}}{{end}}: {{ .Title }}\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;{{with .Description}}{{.}}{{else}}{{.Summary}}{{end}}\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;{{ .Keywords }}\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;author\u0026#34; content=\u0026#34;{{ .Params.author }}\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;generator\u0026#34; content=\u0026#34;Hugo v0.119.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;{{ if .IsHome }}{{ site.Title }}{{ else }}{{ printf \u0026#34;%s | %s\u0026#34; .Title site.Title }}{{ end }}\u0026lt;/title\u0026gt; {{ partialCached \u0026#34;head/css.html\u0026#34; . }} {{ partialCached \u0026#34;head/js.html\u0026#34; . }} Copy ",
    "tags": []
  },
  {
    "id": "be99faaf3aa41bdf87f7b7663371ff4e",
    "title": "css.html",
    "description": "Learn about the head/css partial.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "head",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/head/css/",
    "relURI": "/reference/layouts/partials/head/css/",
    "body": "This partial layout concatenates all of the modular CSS files found in themes/milo/assets/css and outputs a bundle.css file for deployment use. It also minifies and fingerprints the output.\nSource Code # {{- $cssResources := slice (resources.Get \u0026#34;css/main.css\u0026#34;) }} {{- $cssResources = $cssResources | append (resources.Get \u0026#34;css/fonts.css\u0026#34;) }} {{- $cssResources = $cssResources | append (resources.Get \u0026#34;css/colors.css\u0026#34;) }} {{- if eq hugo.Environment \u0026#34;development\u0026#34; }} {{- $cssBundle := $cssResources | resources.Concat \u0026#34;css/bundle.css\u0026#34; }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ $cssBundle.RelPermalink }}\u0026#34;\u0026gt; {{- else }} {{- $opts := dict \u0026#34;minify\u0026#34; true }} {{- $cssBundle := $cssResources | resources.Concat \u0026#34;css/bundle.css\u0026#34; | minify | fingerprint }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ $cssBundle.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $cssBundle.Data.Integrity }}\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; {{- end }} Copy ",
    "tags": []
  },
  {
    "id": "4d36702c09b588ee02dd2dea70b1f588",
    "title": "js.html",
    "description": "Learn about the head/js partial.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "head",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/head/js/",
    "relURI": "/reference/layouts/partials/head/js/",
    "body": "This partial layout concatenates all of the modular VanillaJS files found in themes/milo/assets/js and outputs a bundle.js file for deployment use. It also minifies and fingerprints the output.\nSource Code # {{- $jsResources := slice }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/main.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/chat.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/darkmode.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/search.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/tiles.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/tabs.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/glossary.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/toc.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/sidebar-left.js\u0026#34;) }} {{- $jsResources = $jsResources | append (resources.Get \u0026#34;js/chatTocToggle.js\u0026#34;) }} \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/algoliasearch@4.6.0/dist/algoliasearch-lite.umd.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{- if eq hugo.Environment \u0026#34;development\u0026#34; }} {{- $jsBundle := $jsResources | resources.Concat \u0026#34;js/bundle.js\u0026#34; | js.Build }} \u0026lt;script src=\u0026#34;{{ $jsBundle.RelPermalink }}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{- else }} {{- $opts := dict \u0026#34;minify\u0026#34; true }} {{- $jsBundle := $jsResources | resources.Concat \u0026#34;js/bundle.js\u0026#34; | js.Build $opts | fingerprint }} \u0026lt;script src=\u0026#34;{{ $jsBundle.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $jsBundle.Data.Integrity }}\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{- end }} Copy ",
    "tags": []
  },
  {
    "id": "9cf7ee50670c9f031a99ea277b0f0703",
    "title": "json.html",
    "description": "Learn about the json partial.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "partials",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/json/",
    "relURI": "/reference/layouts/partials/json/",
    "body": "Hugo supports JSON outputs out of the box. But to utilize it, you should define an output template based on the data available to your page kinds and any frontmatter included in the markdown file.\nThis partial is used in the following default layouts:\nhome.json section.json single.json Each of these outputs can be found by adding /index.json to the path of the home, section, or single page. How it Works # By itself, this partial doesn\u0026rsquo;t do anything. When piped reference from a few of our default layouts, it acts as a standardized blueprint for how each article should look like in json. Updating this file will cascade to all outputs where this is referenced.\nSource Code # { \u0026#34;id\u0026#34;: {{- with .File }}{{- .UniqueID | jsonify }}{{- else}}\u0026#34;\u0026#34;{{- end }}, \u0026#34;title\u0026#34;: \u0026#34;{{- if .Title}}{{- .Title }}{{else}}{{- humanize .File.TranslationBaseName -}}{{- end}}\u0026#34;, \u0026#34;description\u0026#34;:{{- with .Description}} {{. | jsonify}}{{- else }}\u0026#34;no description\u0026#34;{{- end}}, \u0026#34;lastCommit\u0026#34;: \u0026#34;{{ .GitInfo.AuthorDate }}\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;{{- if .Page.Params.version.isLatest}}latest{{else}}{{- .Page.Params.version.major }}.{{- .Page.Params.version.minor }}.{{- .Page.Params.version.patch }}{{- end}}\u0026#34;, \u0026#34;section\u0026#34;: {{- with .Section }}{{. | jsonify}} {{- else }}\u0026#34;no section\u0026#34;{{- end}}, \u0026#34;parent\u0026#34;: \u0026#34;{{with .Parent}}{{- .Title }}{{- else }}no parent{{end}}\u0026#34;, \u0026#34;isPage\u0026#34;: {{- .IsPage | jsonify }}, \u0026#34;isSection\u0026#34;: {{- .IsSection | jsonify }}, \u0026#34;pageKind\u0026#34;: {{- .Kind | jsonify }}, \u0026#34;bundleType\u0026#34;: {{- .BundleType | jsonify }}, \u0026#34;uri\u0026#34;: \u0026#34;{{- .Permalink }}\u0026#34;, \u0026#34;relURI\u0026#34;: \u0026#34;{{- .RelPermalink }}\u0026#34;, \u0026#34;body\u0026#34;: {{ .Plain | jsonify }}, {{- if .Page.Params.hidden}}\u0026#34;hidden\u0026#34;: \u0026#34;{{- .Params.hidden}}\u0026#34;,{{- end}} \u0026#34;tags\u0026#34;: [{{- range $tindex, $tag := .Params.tags }}{{- if $tindex }}, {{- end }}\u0026#34;{{- $tag| htmlEscape -}}\u0026#34;{{- end }}] } Copy ",
    "tags": []
  },
  {
    "id": "5a43f32ab16a0895018d6df35728db98",
    "title": "terms.html",
    "description": "Learn about the terms partial.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "partials",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/terms/",
    "relURI": "/reference/layouts/partials/terms/",
    "body": "",
    "tags": []
  },
  {
    "id": "4264e80988516a16bb1e15bf38d03492",
    "title": "footer.html",
    "description": "Learn about the footer partial.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "partials",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/footer/",
    "relURI": "/reference/layouts/partials/footer/",
    "body": "For now, I\u0026rsquo;ve left the footer as a blank slate \u0026mdash; do with it what you wish!\nHow it Works # This partial is referenced from the baseof.html default layout.\nSource Code # \u0026lt;!-- put anything you want here; it\u0026#39;s a blank slate --\u0026gt; Copy ",
    "tags": []
  },
  {
    "id": "8b5ae49dfac8ad7476fdba208b3bd6be",
    "title": "article",
    "description": "Learn about the article partial layouts.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "partials",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/layouts/partials/article/",
    "relURI": "/reference/layouts/partials/article/",
    "body": " name partial refs default refs next-prev.html single.html, section.html tiles.html home.html, section.html chat.html sidebar-right.html baseof.html toc.html sidebar-right.html baseof.html ",
    "tags": []
  },
  {
    "id": "d2d488e87d8ffcab1bdc1dd33e1facec",
    "title": "next-prev.html",
    "description": "Learn how to use the next-prev partial layout.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "article",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/article/next-prev/",
    "relURI": "/reference/layouts/partials/article/next-prev/",
    "body": "The next-prev.html partial layout defines the article progression experience and is located at the end of an article.\nHow it Works # Single pages:\nThe next article in the section is displayed on the left (next points up). The previous article in the section is displayed on the right (prev points down). Section pages:\nThe first child is displayed on the right (points down) This experience can be disabled from the themes/milo/hugo.yaml config by setting Params.articles.nextPrev.display to false. Source Code # {{- if .Site.Params.article.nextPrev.display -}} {{$trunc := .Site.Params.article.nextPrev.trunc}} \u0026lt;div class=\u0026#34;mt-8 flex justify-between items-center\u0026#34;\u0026gt; {{with .NextInSection }} \u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34; class=\u0026#34;tile text-black py-2 px-4 rounded-r-md transition duration-300\u0026#34;\u0026gt; {{.Title | truncate $trunc}} \u0026lt;/a\u0026gt; {{else}} \u0026lt;span class=\u0026#34;py-2 px-4\u0026#34;\u0026gt; \u0026lt;!-- Placeholder for alignment --\u0026gt; \u0026lt;/span\u0026gt; {{ end }} {{with .PrevInSection }} \u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34; class=\u0026#34;tile text-black py-2 px-4 rounded-l-md transition duration-300\u0026#34;\u0026gt; {{.Title | truncate $trunc}} \u0026lt;/a\u0026gt; {{else}} {{- range first 1 .Pages}} \u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34; class=\u0026#34;tile text-black py-2 px-4 rounded-l-md transition duration-300\u0026#34;\u0026gt; {{.Title | truncate $trunc}} \u0026lt;/a\u0026gt; {{- end}} {{ end }} \u0026lt;/div\u0026gt; {{- end -}} Copy ",
    "tags": []
  },
  {
    "id": "039690c1892407e9cc6ec647ea316e7f",
    "title": "tiles.html",
    "description": "Learn how to use the tiles partial layout.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "article",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/article/tiles/",
    "relURI": "/reference/layouts/partials/article/tiles/",
    "body": " How it Works # Source Code # {{- if .Site.Params.article.nextPrev.display -}} {{$trunc := .Site.Params.article.nextPrev.trunc}} \u0026lt;div class=\u0026#34;mt-8 flex justify-between items-center\u0026#34;\u0026gt; {{with .NextInSection }} \u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34; class=\u0026#34;tile text-black py-2 px-4 rounded-r-md transition duration-300\u0026#34;\u0026gt; {{.Title | truncate $trunc}} \u0026lt;/a\u0026gt; {{else}} \u0026lt;span class=\u0026#34;py-2 px-4\u0026#34;\u0026gt; \u0026lt;!-- Placeholder for alignment --\u0026gt; \u0026lt;/span\u0026gt; {{ end }} {{with .PrevInSection }} \u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34; class=\u0026#34;tile text-black py-2 px-4 rounded-l-md transition duration-300\u0026#34;\u0026gt; {{.Title | truncate $trunc}} \u0026lt;/a\u0026gt; {{else}} {{- range first 1 .Pages}} \u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34; class=\u0026#34;tile text-black py-2 px-4 rounded-l-md transition duration-300\u0026#34;\u0026gt; {{.Title | truncate $trunc}} \u0026lt;/a\u0026gt; {{- end}} {{ end }} \u0026lt;/div\u0026gt; {{- end -}} Copy ",
    "tags": []
  },
  {
    "id": "fa59468682c9266f36186ac9a1de4c01",
    "title": "toc.html",
    "description": "Learn how to use the toc partial layout.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "article",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/partials/article/toc/",
    "relURI": "/reference/layouts/partials/article/toc/",
    "body": " How it Works # Source Code # \u0026lt;div id=\u0026#34;tocContainer\u0026#34; class=\u0026#34;hidden toc sticky top-10 pt-4 h-[calc(100vh-4rem)] overflow-y-auto text-sm text-black transition duration-300\u0026#34;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; Copy ",
    "tags": []
  },
  {
    "id": "f0d6a14ec17f504cb15f9ca1f052f9c8",
    "title": "defaults",
    "description": "Learn how to apply unique article layouts for different content types.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Layouts",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/layouts/defaults/",
    "relURI": "/reference/layouts/defaults/",
    "body": "Layouts in the _default folder define the major content types and outputs of your Hugo site.\nDefault Layouts # The following layouts are typically found in all Hugo sites and likely come with a fresh Hugo theme (hugo theme new themeName).\ntemplate description BundleType baseof.html provides a global \u0026ldquo;shell\u0026rdquo; all other templates inherit from. branch list.html renders taxonomy lists (e.g., articles with tags). branch terms.html renders taxonomy terms (e.g., tags). branch section.html renders markdown files in a directory (dir/_index.md). branch home.html renders the / page of your site; overrides content/index.md if present. leaf single.html renders single pages (e.g., articles). leaf Added Layouts # The following layouts are added by the Milo Docs theme.\ntemplate description BundleType frontmatter glossary.html renders markdown files as a stacked list in a directory (dir/_index.md). branch layout: glossary tutorial.html renders markdown files as a wizard with steps (dir/_index.md). branch layout: tutorial tutorialstep.html renders a child markdown file as a tutorial step (tutorial/step.md). leaf layout: tutStep ",
    "tags": []
  },
  {
    "id": "436bcacf379d44422c858e26d7ac2cdf",
    "title": "baseof.html",
    "description": "Learn about the baseof template for the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "defaults",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/defaults/baseof/",
    "relURI": "/reference/layouts/defaults/baseof/",
    "body": "The baseof.html template is the centralization point that glues the site theme together. All other templates defined in the theme are embedded into this one at build \u0026ndash; meaning that global logic and stylings defined here.\nSource Code # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;{{ or site.Language.LanguageCode site.Language.Lang }}\u0026#34; dir=\u0026#34;{{ or site.Language.LanguageDirection `ltr` }}\u0026#34;\u0026gt; \u0026lt;head\u0026gt; {{ partial \u0026#34;head.html\u0026#34; . }} \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;bg-white\u0026#34;\u0026gt; \u0026lt;header\u0026gt; {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;/header\u0026gt; {{partial \u0026#34;navigation/top.html\u0026#34;}} \u0026lt;main class=\u0026#34;max-w-screen-xl 2xl:max-w-screen-2xl mx-auto flex\u0026#34;\u0026gt; {{partial \u0026#34;navigation/sidebar-left.html\u0026#34; . }} \u0026lt;div id=\u0026#34;pageContainer\u0026#34; class=\u0026#34;w-full lg:w-3/5\u0026#34;\u0026gt; {{- if .IsHome}}{{ block \u0026#34;home\u0026#34; . }}{{ end }}{{else}}{{ block \u0026#34;main\u0026#34; . }}{{ end }}{{- end}} \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;searchResultsContainer\u0026#34; class=\u0026#34;hidden w-full lg:w-3/5 m-4\u0026#34;\u0026gt; \u0026lt;!-- populated by JS --\u0026gt; \u0026lt;/div\u0026gt; {{partial \u0026#34;navigation/sidebar-right.html\u0026#34; . }} \u0026lt;/main\u0026gt; \u0026lt;footer\u0026gt; {{ partial \u0026#34;footer.html\u0026#34; . }} \u0026lt;/footer\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Copy ",
    "tags": []
  },
  {
    "id": "010c5afd2e57ba6d84bcfe75e0ab3867",
    "title": "glossary.html",
    "description": "Learn about the glossary page template for the theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "defaults",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/defaults/glossary/",
    "relURI": "/reference/layouts/defaults/glossary/",
    "body": "It\u0026rsquo;s common to want to build out a glossary of terms that are either unique to your product or essential to understanding the larger industry it lives in.\nCreating a glossary is an essential part of your strategy for bolstering organic inbound traffic through authoritative SEO content. How it Works # Source Code # {{ define \u0026#34;main\u0026#34; }} \u0026lt;div class=\u0026#34;flex\u0026#34;\u0026gt; {{ partial \u0026#34;navigation/glossary.html\u0026#34; . }} \u0026lt;article id=\u0026#34;article-container\u0026#34; class=\u0026#34;flex flex-col w-full hide-scrollbar mx-2\u0026#34;\u0026gt; {{ partial \u0026#34;glossary/entries.html\u0026#34; . }} \u0026lt;/article\u0026gt; \u0026lt;/div\u0026gt; {{ end }} Copy It\u0026rsquo;s common to want to build out a glossary of terms that are either unique to your product or essential to understanding the larger industry it lives in.\nCreating a glossary is an essential part of your strategy for bolstering organic inbound traffic through authoritative SEO content. ",
    "tags": []
  },
  {
    "id": "8d01b73d3c064ff8e199c26a9cb4f796",
    "title": "home.html",
    "description": "Learn about the home page template for the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "defaults",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/defaults/home/",
    "relURI": "/reference/layouts/defaults/home/",
    "body": " Source Code # HTML Output # {{ define \u0026#34;home\u0026#34; }} \u0026lt;div id=\u0026#34;articleContent\u0026#34; class=\u0026#34;text-black p-4\u0026#34;\u0026gt; {{ .Content }} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;p-4\u0026#34;\u0026gt; {{partial \u0026#34;article/tiles.html\u0026#34; . }} \u0026lt;/div\u0026gt; {{ end }} Copy JSON Output # [ {{- range $index, $page := .Pages }} {{- if ne $page.Type \u0026#34;json\u0026#34; }} {{- if and $index (gt $index 0) }},{{- end }} {{- partial \u0026#34;json.json\u0026#34; . }} {{- end }} {{- if eq .Kind \u0026#34;section\u0026#34; }} {{- template \u0026#34;section\u0026#34; . }} {{- end }} {{- end }} ] {{- define \u0026#34;section\u0026#34; }} {{- range .Pages }} {{- if ne .Type \u0026#34;json\u0026#34; }} ,{{- partial \u0026#34;json.json\u0026#34; . }} {{- end }} {{- if eq .Kind \u0026#34;section\u0026#34;}} {{- template \u0026#34;section\u0026#34; . }} {{- end }} {{- end }} {{- end }} Copy ",
    "tags": []
  },
  {
    "id": "9b1ccda4496741c5964c17a4d71ea079",
    "title": "list.html",
    "description": "Learn about the list page template for the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "defaults",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/defaults/list/",
    "relURI": "/reference/layouts/defaults/list/",
    "body": " Source Code # {{ define \u0026#34;main\u0026#34; }} \u0026lt;h1 class=\u0026#34;\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ range .Pages }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt;{{ .LinkTitle }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ .Summary }} {{ end }} {{ end }} Copy ",
    "tags": []
  },
  {
    "id": "3d0dd2ff71f9545e3797b90e4f6b7a64",
    "title": "section.html",
    "description": "Learn about the section page template for the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "defaults",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/defaults/section/",
    "relURI": "/reference/layouts/defaults/section/",
    "body": " Source Code # HTML Output # {{ define \u0026#34;main\u0026#34; }} \u0026lt;div class=\u0026#34;my-4\u0026#34;\u0026gt; {{partial \u0026#34;navigation/breadcrumbs.html\u0026#34; . }} \u0026lt;/div\u0026gt; \u0026lt;h1 class=\u0026#34;text-black p-4\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{if .Content}} \u0026lt;div id=\u0026#34;articleContent\u0026#34; class=\u0026#34;p-4 text-black\u0026#34;\u0026gt; {{ .Content }} \u0026lt;/div\u0026gt; {{end}} \u0026lt;div class=\u0026#34;p-4\u0026#34;\u0026gt; {{ partial \u0026#34;article/tiles.html\u0026#34; . }} {{partial \u0026#34;article/next-prev.html\u0026#34; . }} \u0026lt;/div\u0026gt; {{ end }} Copy JSON Output # [ {{- range $index, $page := .Pages }} {{- if ne $page.Type \u0026#34;json\u0026#34; }} {{- if and $index (gt $index 0) }},{{ end }} {{- partial \u0026#34;json.json\u0026#34; . }} {{- end }} {{- if eq .Kind \u0026#34;section\u0026#34;}} {{- template \u0026#34;section\u0026#34; . }} {{- end }} {{- end }} ] {{- define \u0026#34;section\u0026#34; }} {{- range .Pages }} {{- if ne .Type \u0026#34;json\u0026#34; }} ,{{- partial \u0026#34;json.json\u0026#34; . }} {{- end }} {{- if eq .Kind \u0026#34;section\u0026#34;}} {{- template \u0026#34;section\u0026#34; . }} {{- end }} {{- end }} {{- end }} Copy ",
    "tags": []
  },
  {
    "id": "20c095398240c091173424aee1b70918",
    "title": "single.html",
    "description": "Learn about the single page template for the Milo Docs theme.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "defaults",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/reference/layouts/defaults/single/",
    "relURI": "/reference/layouts/defaults/single/",
    "body": " Source Code # HTML Output # {{ define \u0026#34;main\u0026#34; }} \u0026lt;div class=\u0026#34;my-4\u0026#34;\u0026gt; {{partial \u0026#34;navigation/breadcrumbs.html\u0026#34; . }} \u0026lt;/div\u0026gt; \u0026lt;h1 class=\u0026#34;text-black p-4\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;div id=\u0026#34;articleContent\u0026#34; class=\u0026#34;p-4\u0026#34;\u0026gt; {{ .Content }} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;p-4\u0026#34;\u0026gt; {{partial \u0026#34;article/next-prev.html\u0026#34; . }} \u0026lt;/div\u0026gt; {{ end }} Copy JSON Output # {{- partial \u0026#34;json.json\u0026#34; .}} Copy ",
    "tags": []
  },
  {
    "id": "3006e166f7dee2b682b8ae7474fe63cc",
    "title": "Static",
    "description": "Reference static assets for advanced config or development.",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "reference",
    "parent": "Reference",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/reference/static/",
    "relURI": "/reference/static/",
    "body": "",
    "tags": []
  },
  {
    "id": "040b713de49d748fc600c2955aec83fb",
    "title": "Index",
    "description": "no description",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "shared",
    "parent": "Milo Theme Docs",
    "isPage": false,
    "isSection": true,
    "pageKind": "section",
    "bundleType": "branch",
    "uri": "http://localhost:1313/shared/",
    "relURI": "/shared/",
    "body": "",
    "hidden": "true",
    "tags": []
  },
  {
    "id": "bf6ed7cdae0a9028979565cbf77933b6",
    "title": "blah",
    "description": "blah blah",
    "lastCommit": "0001-01-01 00:00:00 +0000 UTC",
    "version": "latest",
    "section": "shared",
    "parent": "",
    "isPage": true,
    "isSection": false,
    "pageKind": "page",
    "bundleType": "",
    "uri": "http://localhost:1313/shared/readfile/",
    "relURI": "/shared/readfile/",
    "body": " This is an embedded section # tes test test. ",
    "tags": []
  }
]
