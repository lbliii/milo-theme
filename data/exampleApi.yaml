openapi: 3.0.0
info:
  title: Sample API
  description: This is a sample API to demonstrate OpenAPI 3.0 features.
  version: "1.0.0"
servers:
  - url: https://api.sample.com/v1
    description: Production server

paths:
  /items:
    get:
      summary: List all items
      operationId: listItems
      tags:
        - Items
      security:
        - bearerAuth: []
      parameters:  # Added example parameters for GET request
        - name: category
          in: query
          description: The category of the items
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: A list of items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    post:
      summary: Create a new item
      operationId: createItem
      tags:
        - Items
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewItem'
      responses:
        '201':
          description: Item created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid input.
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    put:
      summary: Update an existing item
      operationId: updateItem
      tags:
        - Items
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Item updated successfully.
        '400':
          description: Invalid input.
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      summary: Delete an item
      operationId: deleteItem
      tags:
        - Items
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Item deleted successfully.
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Item:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        tags:
          type: array
          items:
            type: string
        available:
          type: boolean

    NewItem:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        tags:
          type: array
          items:
            type: string
        available:
          type: boolean

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
